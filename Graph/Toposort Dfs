//with no cycle

static void findTopo(int node, Stack<Integer> st, List<List<Integer>> adj, boolean[] vis){
    vis[node] = true;
    for(Integer it: adj.get(node)){
        if(vis[it]==false)
            findTopo(it, st, adj, vis);
    }
    st.push(node);
}

static int[] toposort(int n, List<List<Integer>> adj){
    boolean[] vis = new boolean[n];
    Arrays.fill(vis, false);
    Stack<Integer> st = new Stack<>();
    for(int i=0;i<n;i++){
        if(vis[i]==false){
            findTopo(i, st, adj, vis);
        }
    }
    int[] topo = new int[n];
    int ind=0;
    while(!st.isEmpty()) topo[ind++] = st.pop();
    return topo;
}
